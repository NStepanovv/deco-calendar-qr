version: "3.9"

services:
  app:
    build:
      context: .
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  proxy:
    build:
      context: ./proxy
    restart: always
    environment:
      - LISTEN_PORT=8080
      - APP_HOST=app
      - APP_PORT=9000
      - FRONTEND_PATH=/usr/share/nginx/html
    depends_on:
      - app
      - frontend
    ports:
      - 8080:8080
    volumes:
      - static-data:/vol/static

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - app
    environment:
      - REACT_APP_API_BASE_URL=/api/
    expose:
      - 80

volumes:
  postgres-data:
  static-data:
